[project]
name = "astdot"
version = "0.2.0"
description = "Simple Python AST visualizer"
keywords = [
    "python",
    "ast",
    "visualization",
    "graphviz",
    "streamlit",
    "viewer",
    "syntax tree",
    "interactive",
    "bytecode"
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "graphviz>=0.21",
    "streamlit>=1.48.0",
    "streamlit-code-editor>=0.1.22",
]

[dependency-groups]
dev = [
    "ruff>=0.12.9",
    "wemake-python-styleguide>=1.3.0",
]

[tool.ruff]
src = ["src"]
line-length = 80
preview = true
fix = true
format.quote-style = "single"
format.docstring-code-format = false


lint.select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
#   "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
#   "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
#   "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
lint.ignore = [
  "A005",   # allow to shadow stdlib and builtin module names
  "COM812", # trailing comma, conflicts with `ruff format`
  # Different doc rules that we don't really care about:
  "D100",
  "D104",
  "D106",
  "D203",
  "D212",
  "D401",
  "D404",
  "D405",
  "ISC001",  # implicit string concat conflicts with `ruff format`
  "ISC003",  # prefer explicit string concat over implicit concat
  "PLR09",   # we have our own complexity rules
  "PLR2004", # do not report magic numbers
  "PLR6301", # do not require classmethod / staticmethod when self not used
  "TRY003",  # long exception messages from `tryceratops`
  "UP032",  # do not use f-string instead of `format` call
  'UP036',  # Version block is outdated for minimum Python version
]

lint.external = [ "WPS" ]
lint.flake8-import-conventions.banned-from = [ "ast" ]
lint.flake8-quotes.inline-quotes = "single"
lint.mccabe.max-complexity = 15
lint.pydocstyle.convention = "google"
lint.isort.lines-after-imports = 2


[tool.flake8]
format = "wemake"
show-source = true
statistics = false
doctests = false
max-imports = 17

per-file-ignores = [      
]

extend-exclude = [
    ".venv",
]
select = ["WPS", "E999"]
